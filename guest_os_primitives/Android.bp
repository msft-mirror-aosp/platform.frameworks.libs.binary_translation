// Copyright (C) 2023 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package {
    default_applicable_licenses: ["Android-Apache-2.0"],
}

cc_library_headers {
    name: "libberberis_guest_os_primitives_headers",
    defaults: ["berberis_defaults"],
    host_supported: true,
    export_include_dirs: ["include"],
    header_libs: [
        "libberberis_base_headers",
        "libberberis_guest_state_headers",
        "libberberis_runtime_primitives_headers",
    ],
    export_header_lib_headers: [
        "libberberis_base_headers",
        "libberberis_guest_state_headers",
        "libberberis_runtime_primitives_headers",
    ],
}

// Local headers for compiling guest_os_primitives modules only.
// Don't depend on these headers in other modules.
cc_library_headers {
    name: "_libberberis_guest_os_primitives_private_headers",
    defaults: ["berberis_defaults"],
    host_supported: true,
    export_include_dirs: ["."],
}

cc_library_headers {
    name: "libberberis_guest_os_primitives_riscv64_headers",
    defaults: ["berberis_defaults"],
    host_supported: true,
    export_include_dirs: ["riscv64/include"],
    header_libs: [
        "libberberis_guest_os_primitives_headers",
    ],
    export_header_lib_headers: [
        "libberberis_guest_os_primitives_headers",
    ],
}

filegroup {
    name: "libberberis_guest_os_primitives_common_srcs",
    srcs: [
        "guest_map_shadow.cc",
        "guest_signal_action.cc",
        "guest_signal_handling.cc",
        "guest_thread.cc",
        "guest_thread_clone.cc",
        "guest_thread_key.cc",
        "guest_thread_manager.cc",
        "guest_thread_map.cc",
        "guest_thread_pthread_create.cc",
    ],
}

filegroup {
    name: "libberberis_guest_os_primitives_common_x86_32_srcs",
    srcs: ["unmap_and_exit_x86_32.S"],
}

filegroup {
    name: "libberberis_guest_os_primitives_common_x86_64_srcs",
    srcs: ["unmap_and_exit_x86_64.S"],
}

// Common sources to be shared across arch-specific libraries.
cc_defaults {
    name: "libberberis_guest_os_primitives_common_defaults",
    defaults: ["berberis_defaults"],
    host_supported: true,
    srcs: [":libberberis_guest_os_primitives_common_srcs"],
    arch: {
        x86: {
            srcs: [":libberberis_guest_os_primitives_common_x86_32_srcs"],
        },
        x86_64: {
            srcs: [":libberberis_guest_os_primitives_common_x86_64_srcs"],
        },
    },
    header_libs: [
        "libberberis_base_headers",
        "libberberis_guest_os_primitives_headers",
        "libberberis_guest_state_headers",
        "libberberis_instrument_headers",
        "libberberis_runtime_headers",
        "libberberis_runtime_primitives_headers",
        "//frameworks/libs/native_bridge_support:native_bridge_guest_linker_headers",
    ],
    export_header_lib_headers: ["libberberis_guest_os_primitives_headers"],
    include_dirs: [
        // private/bionic_constants.h
        "bionic/libc",
    ],
}

// This hidden filegroup ensures valid file paths for modules depending on
// libberberis_guest_os_primitives_common_arch_defaults.
filegroup {
    name: "_libberberis_guest_os_primitives_common_arch_srcs",
    srcs: [
        "guest_signal_action_arch.cc",
        "guest_signal_handling_arch.cc",
        "guest_thread_pthread_create_arch.cc",
    ],
}

// Similar to the filegroup above. Hidden header lib for modules depending on
// libberberis_guest_os_primitives_common_arch_defaults.
cc_library_headers {
    name: "_libberberis_guest_os_primitives_local_headers",
    defaults: ["berberis_defaults"],
    host_supported: true,
    export_include_dirs: ["."],
}

// Contains sources that are textually common, but must be compiled with arch-
// specific headers, which makes object code arch-specific. In other words,
// only include this module in guest arch-specific libraries.
cc_defaults {
    name: "libberberis_guest_os_primitives_common_arch_defaults",
    srcs: [":_libberberis_guest_os_primitives_common_arch_srcs"],
    header_libs: [
        "_libberberis_guest_os_primitives_local_headers",
        "libberberis_base_headers",
        "libberberis_guest_abi_headers",
        "libberberis_guest_state_headers",
    ],
}

cc_library_static {
    name: "libberberis_guest_os_primitives_riscv64",
    defaults: [
        "berberis_defaults_64",
        "libberberis_guest_os_primitives_common_defaults",
        "libberberis_guest_os_primitives_common_arch_defaults",
    ],
    host_supported: true,
    srcs: [
        "riscv64/guest_setjmp.cc",
        "riscv64/guest_signal.cc",
    ],
    local_include_dirs: ["riscv64"],
    header_libs: [
        "libberberis_guest_abi_riscv64_headers",
        "libberberis_guest_os_primitives_headers",
        "libberberis_guest_os_primitives_riscv64_headers",
        "libberberis_guest_state_headers",
        "libberberis_guest_state_riscv64_headers",
    ],
    export_header_lib_headers: [
        "libberberis_guest_os_primitives_headers",
        "libberberis_guest_os_primitives_riscv64_headers",
    ],
}

filegroup {
    name: "libberberis_guest_os_primitives_unit_tests_srcs",
    srcs: [
        "guest_map_shadow_test.cc",
        "guest_signal_action_test.cc",
        "guest_thread_test.cc",
    ],
}

cc_defaults {
    name: "libberberis_guest_os_primitives_unit_tests_defaults",
    srcs: [":libberberis_guest_os_primitives_unit_tests_srcs"],
    header_libs: [
        "libberberis_base_headers",
        "libberberis_guest_os_primitives_headers",
        "libberberis_guest_state_headers",
        "libberberis_runtime_headers",
    ],
}

cc_test_library {
    name: "libberberis_guest_os_primitives_unit_tests",
    defaults: [
        "berberis_test_library_defaults_64",
        "libberberis_guest_os_primitives_unit_tests_defaults",
    ],
    header_libs: [
        "libberberis_guest_os_primitives_riscv64_headers",
    ],
}
