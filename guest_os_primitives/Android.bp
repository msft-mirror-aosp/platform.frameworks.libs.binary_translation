// Copyright (C) 2023 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package {
    default_applicable_licenses: ["Android-Apache-2.0"],
}

cc_library_headers {
    name: "libberberis_guest_os_primitives_headers",
    defaults: ["berberis_defaults"],
    host_supported: true,
    export_include_dirs: ["include"],
    header_libs: [
        "libberberis_base_headers",
        "libberberis_guest_state_headers",
        "libberberis_runtime_primitives_headers",
    ],
    export_header_lib_headers: [
        "libberberis_base_headers",
        "libberberis_guest_state_headers",
        "libberberis_runtime_primitives_headers",
    ],
}

// Common sources to be shared across arch-specific libraries.
cc_library_static {
    name: "libberberis_guest_os_primitives",
    defaults: ["berberis_defaults"],
    host_supported: true,
    srcs: [
        "guest_map_shadow.cc",
        "guest_signal_action.cc",
        "guest_signal_handling.cc",
        "guest_thread.cc",
        "guest_thread_manager.cc",
        "guest_thread_map.cc",
    ],
    arch: {
        x86: {
            srcs: ["unmap_and_exit_x86_32.S"],
        },
        x86_64: {
            srcs: ["unmap_and_exit_x86_64.S"],
        },
    },
    header_libs: [
        "libberberis_base_headers",
        "libberberis_guest_os_primitives_headers",
        "libberberis_guest_state_headers",
        "libberberis_instrument_headers",
        "libberberis_runtime_primitives_headers",
        "//frameworks/libs/native_bridge_support:native_bridge_guest_linker_headers",
    ],
    export_header_lib_headers: ["libberberis_guest_os_primitives_headers"],
    include_dirs: [
        // private/bionic_constants.h
        "bionic/libc",
    ],
}

cc_library_static {
    name: "libberberis_guest_os_primitives_riscv64",
    defaults: ["berberis_defaults_64"],
    host_supported: true,
    whole_static_libs: [
        "libberberis_guest_os_primitives",
    ],
    srcs: [
        "riscv64/guest_setjmp.cc",
        "riscv64/guest_signal.cc",
    ],
    header_libs: [
        "libberberis_guest_os_primitives_headers",
        "libberberis_guest_state_headers",
        "libberberis_guest_state_riscv64_headers",
    ],
    export_header_lib_headers: ["libberberis_guest_os_primitives_headers"],
}

cc_test_library {
    name: "libberberis_guest_os_primitives_unit_tests",
    defaults: ["berberis_test_library_defaults"],
    srcs: [
        "guest_map_shadow_test.cc",
    ],
    header_libs: [
        "libberberis_base_headers",
        "libberberis_guest_os_primitives_headers",
        "libberberis_guest_state_headers",
    ],
}
